{
	"name": "Mig_CopySecondary",
	"properties": {
		"activities": [
			{
				"name": "Copy data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"additionalColumns": [
							{
								"name": "BatchId",
								"value": {
									"value": "@pipeline().parameters.BatchId",
									"type": "Expression"
								}
							}
						],
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"parallelCopies": 1,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Mig_OracleTable",
						"type": "DatasetReference",
						"parameters": {
							"SourceSchema": {
								"value": "@pipeline().parameters.SourceSchema",
								"type": "Expression"
							},
							"SourceTable": {
								"value": "@pipeline().parameters.SourceTable",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Mig_AzureTable",
						"type": "DatasetReference",
						"parameters": {
							"DestinationSchema": {
								"value": "@pipeline().parameters.DestinationSchema",
								"type": "Expression"
							},
							"DestinationTable": {
								"value": "@pipeline().parameters.DestinationTable",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Log OK",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[log].[pr_WriteCopyResults]",
					"storedProcedureParameters": {
						"BatchId": {
							"value": {
								"value": "@pipeline().parameters.BatchId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"copyDuration": {
							"value": {
								"value": "@activity('Copy data').output.copyDuration",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"CopyId": {
							"value": {
								"value": "@pipeline().parameters.CopyId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"durationInQueue": {
							"value": {
								"value": "@activity('Copy data').output.durationInQueue.integrationRuntimeQueue",
								"type": "Expression"
							},
							"type": "Double"
						},
						"Result": {
							"value": "OK",
							"type": "String"
						},
						"rowsCopied": {
							"value": {
								"value": "@activity('Copy data').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Table": {
							"value": {
								"value": "@pipeline().parameters.DestinationTable",
								"type": "Expression"
							},
							"type": "String"
						},
						"throughput": {
							"value": {
								"value": "@activity('Copy data').output.throughput",
								"type": "Expression"
							},
							"type": "Double"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Mig_STGAzure",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Delete ID Copy -      Log KO",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[log].[pr_WriteCopyResults]",
					"storedProcedureParameters": {
						"BatchId": {
							"value": {
								"value": "@pipeline().parameters.BatchId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"copyDuration": {
							"value": {
								"value": "@activity('Copy data').output.copyDuration",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"CopyId": {
							"value": {
								"value": "@pipeline().parameters.CopyId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"durationInQueue": {
							"value": {
								"value": "@activity('Copy data').output.durationInQueue.integrationRuntimeQueue",
								"type": "Expression"
							},
							"type": "Double"
						},
						"Result": {
							"value": "KO",
							"type": "String"
						},
						"rowsCopied": {
							"value": {
								"value": "@activity('Copy data').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Table": {
							"value": {
								"value": "@pipeline().parameters.DestinationTable",
								"type": "Expression"
							},
							"type": "String"
						},
						"throughput": {
							"value": {
								"value": "@activity('Copy data').output.throughput",
								"type": "Expression"
							},
							"type": "Double"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Mig_STGAzure",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"SourceSchema": {
				"type": "string"
			},
			"SourceTable": {
				"type": "string"
			},
			"DestinationSchema": {
				"type": "string"
			},
			"DestinationTable": {
				"type": "string"
			},
			"CopyId": {
				"type": "int"
			},
			"BatchId": {
				"type": "int",
				"defaultValue": 1
			}
		},
		"folder": {
			"name": "Migration"
		},
		"annotations": [],
		"lastPublishTime": "2021-11-10T19:07:54Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}